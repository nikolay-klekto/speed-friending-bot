/*
 * This file is generated by jOOQ.
 */
package by.sf.bot.jooq.tables.records


import by.sf.bot.jooq.tables.MainBotInfo

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MainBotInfoRecord() : UpdatableRecordImpl<MainBotInfoRecord>(MainBotInfo.MAIN_BOT_INFO), Record3<Int?, String?, String?> {

    var idInfo: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    var key: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var value: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<Int?, String?, String?> = super.fieldsRow() as Row3<Int?, String?, String?>
    override fun valuesRow(): Row3<Int?, String?, String?> = super.valuesRow() as Row3<Int?, String?, String?>
    override fun field1(): Field<Int?> = MainBotInfo.MAIN_BOT_INFO.ID_INFO
    override fun field2(): Field<String?> = MainBotInfo.MAIN_BOT_INFO.KEY
    override fun field3(): Field<String?> = MainBotInfo.MAIN_BOT_INFO.VALUE
    override fun component1(): Int? = idInfo
    override fun component2(): String? = key
    override fun component3(): String? = value
    override fun value1(): Int? = idInfo
    override fun value2(): String? = key
    override fun value3(): String? = value

    override fun value1(value: Int?): MainBotInfoRecord {
        this.idInfo = value
        return this
    }

    override fun value2(value: String?): MainBotInfoRecord {
        this.key = value
        return this
    }

    override fun value3(value: String?): MainBotInfoRecord {
        this.value = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: String?): MainBotInfoRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised MainBotInfoRecord
     */
    constructor(idInfo: Int? = null, key: String? = null, value: String? = null): this() {
        this.idInfo = idInfo
        this.key = key
        this.value = value
    }

    /**
     * Create a detached, initialised MainBotInfoRecord
     */
    constructor(value: by.sf.bot.jooq.tables.pojos.MainBotInfo?): this() {
        if (value != null) {
            this.idInfo = value.idInfo
            this.key = value.key
            this.value = value.value
        }
    }
}
