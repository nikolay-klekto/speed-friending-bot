/*
 * This file is generated by jOOQ.
 */
package by.sf.bot.jooq.tables.records


import by.sf.bot.jooq.tables.Occupations

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class OccupationsRecord() : UpdatableRecordImpl<OccupationsRecord>(Occupations.OCCUPATIONS), Record3<Int?, String?, Boolean?> {

    var occupationId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    var occupation: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    var freshStatus: Boolean?
        set(value): Unit = set(2, value)
        get(): Boolean? = get(2) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row3<Int?, String?, Boolean?> = super.fieldsRow() as Row3<Int?, String?, Boolean?>
    override fun valuesRow(): Row3<Int?, String?, Boolean?> = super.valuesRow() as Row3<Int?, String?, Boolean?>
    override fun field1(): Field<Int?> = Occupations.OCCUPATIONS.OCCUPATION_ID
    override fun field2(): Field<String?> = Occupations.OCCUPATIONS.OCCUPATION
    override fun field3(): Field<Boolean?> = Occupations.OCCUPATIONS.FRESH_STATUS
    override fun component1(): Int? = occupationId
    override fun component2(): String? = occupation
    override fun component3(): Boolean? = freshStatus
    override fun value1(): Int? = occupationId
    override fun value2(): String? = occupation
    override fun value3(): Boolean? = freshStatus

    override fun value1(value: Int?): OccupationsRecord {
        this.occupationId = value
        return this
    }

    override fun value2(value: String?): OccupationsRecord {
        this.occupation = value
        return this
    }

    override fun value3(value: Boolean?): OccupationsRecord {
        this.freshStatus = value
        return this
    }

    override fun values(value1: Int?, value2: String?, value3: Boolean?): OccupationsRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        return this
    }

    /**
     * Create a detached, initialised OccupationsRecord
     */
    constructor(occupationId: Int? = null, occupation: String? = null, freshStatus: Boolean? = null): this() {
        this.occupationId = occupationId
        this.occupation = occupation
        this.freshStatus = freshStatus
    }

    /**
     * Create a detached, initialised OccupationsRecord
     */
    constructor(value: by.sf.bot.jooq.tables.pojos.Occupations?): this() {
        if (value != null) {
            this.occupationId = value.occupationId
            this.occupation = value.occupation
            this.freshStatus = value.freshStatus
        }
    }
}
