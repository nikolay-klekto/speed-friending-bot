/*
 * This file is generated by jOOQ.
 */
package by.sf.bot.jooq.tables.records


import by.sf.bot.jooq.tables.Users

import java.time.LocalDate

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


/**
 * Таблица для хранения информации о пользователях
 */
@Suppress("UNCHECKED_CAST")
open class UsersRecord() : UpdatableRecordImpl<UsersRecord>(Users.USERS), Record5<Int?, Int?, String?, LocalDate?, Boolean?> {

    var userId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    var telegramId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    var username: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    var dateCreated: LocalDate?
        set(value): Unit = set(3, value)
        get(): LocalDate? = get(3) as LocalDate?

    var remindStatus: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row5<Int?, Int?, String?, LocalDate?, Boolean?> = super.fieldsRow() as Row5<Int?, Int?, String?, LocalDate?, Boolean?>
    override fun valuesRow(): Row5<Int?, Int?, String?, LocalDate?, Boolean?> = super.valuesRow() as Row5<Int?, Int?, String?, LocalDate?, Boolean?>
    override fun field1(): Field<Int?> = Users.USERS.USER_ID
    override fun field2(): Field<Int?> = Users.USERS.TELEGRAM_ID
    override fun field3(): Field<String?> = Users.USERS.USERNAME
    override fun field4(): Field<LocalDate?> = Users.USERS.DATE_CREATED
    override fun field5(): Field<Boolean?> = Users.USERS.REMIND_STATUS
    override fun component1(): Int? = userId
    override fun component2(): Int? = telegramId
    override fun component3(): String? = username
    override fun component4(): LocalDate? = dateCreated
    override fun component5(): Boolean? = remindStatus
    override fun value1(): Int? = userId
    override fun value2(): Int? = telegramId
    override fun value3(): String? = username
    override fun value4(): LocalDate? = dateCreated
    override fun value5(): Boolean? = remindStatus

    override fun value1(value: Int?): UsersRecord {
        this.userId = value
        return this
    }

    override fun value2(value: Int?): UsersRecord {
        this.telegramId = value
        return this
    }

    override fun value3(value: String?): UsersRecord {
        this.username = value
        return this
    }

    override fun value4(value: LocalDate?): UsersRecord {
        this.dateCreated = value
        return this
    }

    override fun value5(value: Boolean?): UsersRecord {
        this.remindStatus = value
        return this
    }

    override fun values(value1: Int?, value2: Int?, value3: String?, value4: LocalDate?, value5: Boolean?): UsersRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        return this
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(userId: Int? = null, telegramId: Int? = null, username: String? = null, dateCreated: LocalDate? = null, remindStatus: Boolean? = null): this() {
        this.userId = userId
        this.telegramId = telegramId
        this.username = username
        this.dateCreated = dateCreated
        this.remindStatus = remindStatus
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    constructor(value: by.sf.bot.jooq.tables.pojos.Users?): this() {
        if (value != null) {
            this.userId = value.userId
            this.telegramId = value.telegramId
            this.username = value.username
            this.dateCreated = value.dateCreated
            this.remindStatus = value.remindStatus
        }
    }
}
